{
  "orchestration": {
    "zen-mcp": {
      "name": "Zen MCP Server",
      "description": "Multi-provider AI model routing and orchestration",
      "options": {
        "official": {
          "install": "uvx --from git+https://github.com/BeehiveInnovations/zen-mcp-server zen-mcp-server",
          "config_name": "zen-mcp",
          "env_vars": ["OPENAI_API_KEY", "ANTHROPIC_API_KEY", "GEMINI_API_KEY"]
        },
        "enhanced": {
          "install": "uvx --from git+https://github.com/199-mcp/mcp-zen zen-mcp-server",
          "config_name": "zen-mcp-enhanced",
          "env_vars": ["OPENAI_API_KEY", "ANTHROPIC_API_KEY", "GEMINI_API_KEY"]
        }
      }
    }
  },
  "context": {
    "context7": {
      "name": "Context7",
      "description": "Up-to-date code documentation and project context",
      "options": {
        "official": {
          "install": "npx -y @upstash/context7-mcp",
          "config_name": "context7",
          "env_vars": ["CONTEXT7_API_KEY"]
        }
      }
    },
    "perplexity": {
      "name": "Perplexity Search",
      "description": "Real-time web research and search capabilities",
      "options": {
        "official": {
          "install": "uvx --from git+https://github.com/ppl-ai/modelcontextprotocol perplexity-mcp",
          "config_name": "perplexity",
          "env_vars": ["PERPLEXITY_API_KEY"]
        },
        "enhanced": {
          "install": "uvx --from git+https://github.com/cyanheads/perplexity-mcp-server perplexity-mcp-server",
          "config_name": "perplexity-enhanced",
          "env_vars": ["PERPLEXITY_API_KEY"]
        }
      }
    }
  },
  "coding": {
    "serena": {
      "name": "Serena",
      "description": "Semantic code understanding and IDE-like editing",
      "options": {
        "official": {
          "install": "uvx --from git+https://github.com/oraios/serena serena start-mcp-server --context ide-assistant --project $(pwd)",
          "config_name": "serena",
          "env_vars": []
        }
      }
    }
  },
  "search": {
    "brave-search": {
      "name": "Brave Search",
      "description": "Privacy-focused web search with technical content",
      "options": {
        "official": {
          "install": "npx -y @modelcontextprotocol/server-brave-search",
          "config_name": "brave-search",
          "env_vars": ["BRAVE_API_KEY"]
        }
      }
    }
  },
  "automation": {
    "puppeteer": {
      "name": "Puppeteer Browser Automation",
      "description": "Browser automation and web scraping",
      "options": {
        "official": {
          "install": "npx -y @modelcontextprotocol/server-puppeteer",
          "config_name": "puppeteer",
          "env_vars": []
        },
        "enhanced": {
          "install": "uvx --from git+https://github.com/merajmehrabi/puppeteer-mcp-server puppeteer-mcp-server",
          "config_name": "puppeteer-enhanced",
          "env_vars": []
        }
      }
    },
    "firecrawl": {
      "name": "Firecrawl Web Scraping",
      "description": "Advanced web scraping with JavaScript rendering",
      "options": {
        "official": {
          "install": "npx -y firecrawl-mcp",
          "config_name": "firecrawl",
          "env_vars": ["FIRECRAWL_API_KEY"]
        }
      }
    },
    "desktop-commander": {
      "name": "Desktop Commander",
      "description": "System-level control and terminal access",
      "options": {
        "official": {
          "install": "npx @wonderwhy-er/desktop-commander@latest setup",
          "config_name": "desktop-commander",
          "env_vars": []
        }
      }
    },
    "playwright": {
      "name": "Playwright MCP Server",
      "description": "Browser automation and testing with Playwright",
      "options": {
        "official": {
          "install": "npm install -g @executeautomation/playwright-mcp-server",
          "config_name": "playwright-mcp",
          "env_vars": []
        }
      }
    },
    "testsprite": {
      "name": "TestSprite MCP Server",
      "description": "Automated testing with AI-powered test generation",
      "options": {
        "official": {
          "install": "npm install -g @testsprite/mcp-server",
          "config_name": "testsprite-mcp",
          "env_vars": ["TESTSPRITE_API_KEY"]
        }
      }
    }
  },
  "version_control": {
    "github": {
      "name": "GitHub Integration",
      "description": "GitHub repository and issue management",
      "options": {
        "official": {
          "install": "npx -y @modelcontextprotocol/server-github",
          "config_name": "github",
          "env_vars": ["GITHUB_PERSONAL_ACCESS_TOKEN"]
        }
      }
    },
    "gitlab": {
      "name": "GitLab Integration",
      "description": "GitLab repository and CI/CD integration",
      "options": {
        "enhanced": {
          "install": "uvx --from git+https://github.com/zereight/gitlab-mcp gitlab-mcp",
          "config_name": "gitlab",
          "env_vars": ["GITLAB_TOKEN", "GITLAB_URL"]
        }
      }
    }
  }
}