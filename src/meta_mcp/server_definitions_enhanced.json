{
  "coding": {
    "serena": {
      "name": "Serena",
      "description": "Semantic code understanding and IDE-like editing",
      "repository_url": "https://github.com/oraios/serena",
      "documentation_url": "https://github.com/oraios/serena#readme",
      "author": "Oraios",
      "category": "coding",
      "options": {
        "official": {
          "install": "uvx --from git+https://github.com/oraios/serena serena-mcp-server",
          "verify_install": "which serena-mcp-server",
          "uninstall": "uvx uninstall serena-mcp-server",
          
          "integrations": {
            "claude_desktop": {
              "config_path": "~/Library/Application Support/Claude/claude_desktop_config.json",
              "config_template": {
                "mcpServers": {
                  "serena": {
                    "command": "serena-mcp-server",
                    "args": [],
                    "env": {}
                  }
                }
              },
              "restart_required": true,
              "instructions": "Restart Claude Desktop after adding this configuration"
            },
            "local_mcp_json": {
              "config_path": "./.mcp.json",
              "config_template": {
                "mcpServers": {
                  "serena": {
                    "command": "serena-mcp-server",
                    "args": [],
                    "env": {}
                  }
                }
              },
              "restart_required": false,
              "instructions": "Add to local .mcp.json for project-specific usage"
            },
            "gemini": {
              "config_path": "~/.config/gemini/mcp_config.json",
              "config_template": {
                "servers": {
                  "serena": {
                    "command": "serena-mcp-server",
                    "transport": "stdio"
                  }
                }
              },
              "restart_required": true,
              "instructions": "Configure in Gemini MCP settings"
            },
            "custom_client": {
              "stdio_command": "serena-mcp-server",
              "http_endpoint": null,
              "websocket_endpoint": null,
              "instructions": "Use stdio transport with command: serena-mcp-server"
            }
          },
          
          "env_vars": [],
          "prerequisites": ["uv"],
          "platform_support": {
            "windows": true,
            "macos": true,
            "linux": true
          }
        }
      }
    }
  },
  
  "search": {
    "brave-search": {
      "name": "Brave Search",
      "description": "Privacy-focused web search with technical content",
      "repository_url": "https://github.com/modelcontextprotocol/server-brave-search",
      "documentation_url": "https://github.com/modelcontextprotocol/server-brave-search#readme",
      "author": "Model Context Protocol",
      "category": "search",
      "options": {
        "official": {
          "install": "npx -y @modelcontextprotocol/server-brave-search",
          "verify_install": "npx @modelcontextprotocol/server-brave-search --version",
          "uninstall": "npm uninstall -g @modelcontextprotocol/server-brave-search",
          
          "integrations": {
            "claude_desktop": {
              "config_path": "~/Library/Application Support/Claude/claude_desktop_config.json",
              "config_template": {
                "mcpServers": {
                  "brave-search": {
                    "command": "npx",
                    "args": ["-y", "@modelcontextprotocol/server-brave-search"],
                    "env": {
                      "BRAVE_API_KEY": "your-brave-api-key-here"
                    }
                  }
                }
              },
              "restart_required": true,
              "instructions": "Restart Claude Desktop after adding this configuration"
            },
            "local_mcp_json": {
              "config_path": "./.mcp.json",
              "config_template": {
                "mcpServers": {
                  "brave-search": {
                    "command": "npx",
                    "args": ["-y", "@modelcontextprotocol/server-brave-search"],
                    "env": {
                      "BRAVE_API_KEY": "your-brave-api-key-here"
                    }
                  }
                }
              },
              "restart_required": false,
              "instructions": "Add to local .mcp.json for project-specific usage"
            },
            "gemini": {
              "config_path": "~/.config/gemini/mcp_config.json",
              "config_template": {
                "servers": {
                  "brave-search": {
                    "command": "npx",
                    "args": ["-y", "@modelcontextprotocol/server-brave-search"],
                    "transport": "stdio",
                    "env": {
                      "BRAVE_API_KEY": "your-brave-api-key-here"
                    }
                  }
                }
              },
              "restart_required": true,
              "instructions": "Configure in Gemini MCP settings"
            }
          },
          
          "env_vars": [
            {
              "name": "BRAVE_API_KEY",
              "description": "API key from Brave Search API (https://api.search.brave.com/app/keys)",
              "required": true,
              "example": "BSAxxxxxxxxxxxxxxxxx"
            }
          ],
          "prerequisites": ["node", "npm"],
          "platform_support": {
            "windows": true,
            "macos": true,
            "linux": true
          }
        }
      }
    }
  },
  
  "version_control": {
    "github": {
      "name": "GitHub Integration",
      "description": "GitHub repository and issue management",
      "repository_url": "https://github.com/modelcontextprotocol/server-github",
      "documentation_url": "https://github.com/modelcontextprotocol/server-github#readme",
      "author": "Model Context Protocol",
      "category": "version_control",
      "options": {
        "official": {
          "install": "npx -y @modelcontextprotocol/server-github",
          "verify_install": "npx @modelcontextprotocol/server-github --version",
          "uninstall": "npm uninstall -g @modelcontextprotocol/server-github",
          
          "integrations": {
            "claude_desktop": {
              "config_path": "~/Library/Application Support/Claude/claude_desktop_config.json",
              "config_template": {
                "mcpServers": {
                  "github": {
                    "command": "npx",
                    "args": ["-y", "@modelcontextprotocol/server-github"],
                    "env": {
                      "GITHUB_PERSONAL_ACCESS_TOKEN": "your-github-token-here"
                    }
                  }
                }
              },
              "restart_required": true,
              "instructions": "Restart Claude Desktop after adding this configuration"
            },
            "local_mcp_json": {
              "config_path": "./.mcp.json",
              "config_template": {
                "mcpServers": {
                  "github": {
                    "command": "npx",
                    "args": ["-y", "@modelcontextprotocol/server-github"],
                    "env": {
                      "GITHUB_PERSONAL_ACCESS_TOKEN": "your-github-token-here"
                    }
                  }
                }
              },
              "restart_required": false,
              "instructions": "Add to local .mcp.json for project-specific usage"
            }
          },
          
          "env_vars": [
            {
              "name": "GITHUB_PERSONAL_ACCESS_TOKEN", 
              "description": "GitHub Personal Access Token with repo permissions",
              "required": true,
              "example": "ghp_xxxxxxxxxxxxxxxxxxxx"
            }
          ],
          "prerequisites": ["node", "npm"],
          "platform_support": {
            "windows": true,
            "macos": true,
            "linux": true
          }
        }
      }
    }
  },
  
  "automation": {
    "puppeteer": {
      "name": "Puppeteer Browser Automation",
      "description": "Browser automation and web scraping with Puppeteer",
      "repository_url": "https://github.com/modelcontextprotocol/server-puppeteer",
      "documentation_url": "https://github.com/modelcontextprotocol/server-puppeteer#readme",
      "author": "Model Context Protocol",
      "category": "automation",
      "options": {
        "official": {
          "install": "npx -y @modelcontextprotocol/server-puppeteer",
          "verify_install": "npx @modelcontextprotocol/server-puppeteer --version",
          "uninstall": "npm uninstall -g @modelcontextprotocol/server-puppeteer",
          
          "integrations": {
            "claude_desktop": {
              "config_path": "~/Library/Application Support/Claude/claude_desktop_config.json",
              "config_template": {
                "mcpServers": {
                  "puppeteer": {
                    "command": "npx",
                    "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
                    "env": {}
                  }
                }
              },
              "restart_required": true,
              "instructions": "Restart Claude Desktop after adding this configuration"
            },
            "local_mcp_json": {
              "config_path": "./.mcp.json",
              "config_template": {
                "mcpServers": {
                  "puppeteer": {
                    "command": "npx",
                    "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
                    "env": {}
                  }
                }
              },
              "restart_required": false,
              "instructions": "Add to local .mcp.json for project-specific usage"
            }
          },
          
          "env_vars": [],
          "prerequisites": ["node", "npm"],
          "platform_support": {
            "windows": true,
            "macos": true,
            "linux": true
          }
        }
      }
    }
  }
}